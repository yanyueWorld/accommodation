<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yanyue.dao.AppartmentDao">
    <resultMap id="BaseResultMap" type="com.example.yanyue.pojo.Appartment">
        <id column="apartment_id" jdbcType="INTEGER" property="apartmentId"/>
        <result column="type_id" jdbcType="INTEGER" property="typeId"/>
        <result column="attr_id" jdbcType="INTEGER" property="attrId"/>
        <result column="apartment_name" jdbcType="VARCHAR" property="apartmentName"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="owner" jdbcType="INTEGER" property="owner"/>
        <association property="typeId" resultMap="typeMap"/>
        <association property="owner" resultMap="accountMap"/>
    </resultMap>
    <resultMap id="typeMap" type="com.example.yanyue.pojo.AppartmentType">
        <id column="type_id" jdbcType="INTEGER" property="typeId"/>
    </resultMap>
    <resultMap id="accountMap" type="com.example.yanyue.pojo.Account">
        <id column="account_id" jdbcType="INTEGER" property="accountId"/>
    </resultMap>
    <sql id="Base_Column_List">
    apartment_id, type_id, attr_id, apartment_name, price, address, owner
  </sql>
    <select id="getAppartmentByExample" resultType="com.example.yanyue.pojo.vo.AppartmentVO">
        select appartment.apartment_id apartment_id,apartment_name,price,address,name,type_name
        from appartment,appartment_type,account
        where appartment.type_id=appartment_type.type_id
        and appartment.owner=account.account_id
        <if test="appartmentVO!=null">
            <if test="appartmentVO.apartmentName!=null">
                and apartment_name like concat('%',#{appartmentVO.apartmentName},'%')
            </if>
            <if test="appartmentVO.address!=null">
                and address like concat('%',#{appartmentVO.address},'%')
            </if>
            <if test="appartmentVO.beginPrice!=null">
                <if test="appartmentVO.endPrice!=null">
                    and price between #{appartmentVO.beginPrice} and #{appartmentVO.endPrice}
                </if>
                <if test="appartmentVO.endPrice==null">
                    and price &gt;= #{appartmentVO.beginPrice}
                </if>
            </if>
            <if test="appartmentVO.beginPrice==null">
                <if test="appartmentVO.endPrice!=null">
                    and price &lt;= #{appartmentVO.endPrice}
                </if>
            </if>
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete apartment_pic,picture,appartment from appartment
        left join apartment_pic on appartment.apartment_id=apartment_pic.apartment_id
        left join picture on apartment_pic.pic_id=picture.pic_id
        where appartment.apartment_id = #{apartmentId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.yanyue.pojo.Appartment">
    insert into appartment (apartment_id, type_id, attr_id, 
      apartment_name, price, address, 
      owner)
    values (#{apartmentId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{attrId,jdbcType=INTEGER}, 
      #{apartmentName,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{address,jdbcType=VARCHAR}, 
      #{owner,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.example.yanyue.pojo.Appartment">
        insert into appartment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apartmentId != null">
                apartment_id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="attrId != null">
                attr_id,
            </if>
            <if test="apartmentName != null">
                apartment_name,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="owner != null">
                owner,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="apartmentId != null">
                #{apartmentId,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="attrId != null">
                #{attrId,jdbcType=INTEGER},
            </if>
            <if test="apartmentName != null">
                #{apartmentName,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="owner != null">
                #{owner,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.yanyue.pojo.Appartment">
        update appartment
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="attrId != null">
                attr_id = #{attrId,jdbcType=INTEGER},
            </if>
            <if test="apartmentName != null">
                apartment_name = #{apartmentName,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="owner != null">
                owner = #{owner,jdbcType=INTEGER},
            </if>
        </set>
        where apartment_id = #{apartmentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.yanyue.pojo.Appartment">
    update appartment
    set type_id = #{typeId,jdbcType=INTEGER},
      attr_id = #{attrId,jdbcType=INTEGER},
      apartment_name = #{apartmentName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=INTEGER}
    where apartment_id = #{apartmentId,jdbcType=INTEGER}
  </update>
</mapper>