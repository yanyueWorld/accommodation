<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.yanyue.dao.AccountDao">
  <resultMap id="BaseResultMap" type="com.example.yanyue.pojo.Account">
    <id column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="birth" jdbcType="TIMESTAMP" property="birth" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="remainder_money" jdbcType="DECIMAL" property="remainderMoney" />
    <result column="status" jdbcType="INTEGER" property="status"/>
    <association property="accountId" resultMap="roleAccountMap"/>
  </resultMap>
  <resultMap id="roleAccountMap" type="com.example.yanyue.pojo.AccountRole">
    <id column="ar_id" jdbcType="INTEGER" property="arId"></id>
    <association property="roleId" resultMap="roleMap"/>
  </resultMap>
  <resultMap id="roleMap" type="com.example.yanyue.pojo.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId"></id>
  </resultMap>
  <sql id="Base_Column_List">
    account_id, gender, id_number, birth, password, name, account_name, telephone, remainder_money
  </sql>

  <select id="login" resultMap="BaseResultMap" parameterType="com.example.yanyue.pojo.Account">
    select
    <include refid="Base_Column_List"/>
    from account where account_name=#{accountName} and password=#{password} and status=0;
  </select>

  <select id="getAccountByAccountId" resultType="com.example.yanyue.pojo.Account">
    select
    <include refid="Base_Column_List"/>
    from account where account_id=#{accountId}
  </select>

  <select id="getAccountsByExample" resultMap="BaseResultMap">
    select account.account_id account_id,account.gender gender,account.birth birth,account.password password,account.name name,account.id_number id_number,
      account.account_name account_name,account.telephone telephone,account.remainder_money remainder_money,role.role_name role_name
      from account,account_role,role
      where role.role_id=account_role.role_id
      and account.account_id=account_role.account_id
      <if test="accountVO!=null">
        <if test="accountVO.accountName!=null">
          and account_name like concat('%',#{accountVO.accountName},'%')
        </if>
        <if test="accountVO.name!=null">
          and name like concat('%',#{accountVO.name},'%')
        </if>
        <if test="accountVO.telphone!=null">
          and telephone like concat('%',#{accountVO.telphone},'%')
        </if>
        <if test="accountVO.roleId!=null">
          and role.role_id=#{accountVO.roleId}
        </if>
        <if test="accountVO.status!=null">
          and status=#{accountVO.status}
        </if>
      </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where account_id = #{accountId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.yanyue.pojo.Account">
    insert into account (account_id, gender, id_number, 
      birth, password, name, 
      account_name, telephone, remainder_money
      )
    values (#{accountId,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, #{idNumber,jdbcType=VARCHAR}, 
      #{birth,jdbcType=TIMESTAMP}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{accountName,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{remainderMoney,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.yanyue.pojo.Account">
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="remainderMoney != null">
        remainder_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="remainderMoney != null">
        #{remainderMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.yanyue.pojo.Account">
    update account
    <set>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="remainderMoney != null">
        remainder_money = #{remainderMoney,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=DECIMAL},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=INTEGER}
  </update>
</mapper>